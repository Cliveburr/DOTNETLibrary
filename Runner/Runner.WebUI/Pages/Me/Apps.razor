@using Runner.Business.Entities;
@inject NavigationManager navigationManager
@inject NodeService nodeService
@inject ModalService modalService

<div class="container">

    <div class="buttons mt-3">
        <button type="button" class="button is-success" @onclick="OnRefresh_Click">Refresh</button>
        <button type="button" class="button is-success" @onclick="OnCreate_Click">Create</button>
    </div>

    <div class="box mt-3">
        @if (Items != null)
        {
            <DataTable Items="Items">
                <Header>
                    <tr>
                        <th class="w20">Open</th>
                        <th>Name</th>
                    </tr>
                </Header>
                <Body Context="Item">
                    <tr>
                        <td>
                            <button type="button" class="button is-small" @onclick="@(_ => OnNavigateApp_Click(Item))">
                                <i class="fa-solid fa-rocket"></i>
                            </button>
                        </td>
                        <td>@Item.Name</td>
                    </tr>
                </Body>
            </DataTable>
        }
    </div>
</div>


@code {

    public List<App>? Items { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await OnRefresh_Click();
    }

    public async Task OnRefresh_Click()
    {
        Items = await nodeService.ReadApps();
        StateHasChanged();
    }

    public async Task OnCreate_Click()
    {
        var question = await modalService.Question("Enter the name of the app", "", "app");
        if (question.Ok)
        {
            await nodeService.CreateApp(question.Value);
            await OnRefresh_Click();
        }
    }

    public void OnNavigateApp_Click(Business.Entities.App app)
    {
        navigationManager.NavigateTo("/app/" + app.Name);
    }
}
