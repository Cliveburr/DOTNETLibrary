@using Runner.Business.Datas.Model
@using Runner.Business.Datas.Validator
@inherits ModalBase
@inject NotificationService notification

@if (request != null)
{
    <div class="modal is-active">
        <div class="modal-background" @onclick=Close></div>
        <div class="modal-card w70">
            <header class="modal-card-head">
                <p class="modal-card-title">Edit Data</p>
                <button class="delete" aria-label="close" @onclick=Close></button>
            </header>
            <section class="modal-card-body">
                <DataFullEditor Properties=request />
            </section>
            <footer class="modal-card-foot is-justify-content-flex-end">
                <button class="button is-success" @onclick=ResumeOk>Ok</button>
                <button class="button" @onclick=Close>Cancel</button>
            </footer>
        </div>
        <button class="modal-close is-large" aria-label="close" @onclick=Close></button>
    </div>
}

@code {

    private List<DataFullProperty>? request;
    public required string inputValue;

    protected override void OnInitialized()
    {
        request = Control.Request as List<DataFullProperty>;
        if (request == null)
        {
            throw new Exception("InputTextRequest invalid!");
        }
    }

    private async Task ResumeOk()
    {
        if (request is not null)
        {
            var errors = DataValidator.Validate(request);
            if (errors.Any())
            {
                foreach (var error in errors)
                {
                    await notification.AddInfo(error.Text, 0);
                }
            }
            else
            {
                Resume(request
                    .Select(d => d.ToDataProperty())
                    .ToList());
            }
        }
    }
}
