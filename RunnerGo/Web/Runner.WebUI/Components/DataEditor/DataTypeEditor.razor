@* @inherits BasePage
@using Runner.Business.Datas.Model

<table class="table is-bordered is-striped is-narrow is-hoverable is-fullwidth">
    <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Required</th>
            <th>Default</th>
            <th class="w50px"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var prop in Properties)
        {
            <tr>
                <td>
                    <p class="control has-icons-left">
                        <input class="input" @bind=prop.Name type="text" placeholder="Name">
                        <span class="icon is-left">
                            <i class="fa-solid fa-key"></i>
                        </span>
                    </p>
                </td>
                <td>
                    <div class="control has-icons-left is-expanded">
                        <div class="select is-fullwidth">
                            <EnumSelect Value=prop.Type ValueChanged="@((DataTypeEnum e) => OnPropSelect_ValueChanged(prop, e))" />
                        </div>
                        <div class="icon is-small is-left">
                            <i class="fa-solid fa-superscript"></i>
                        </div>
                    </div>
                </td>
                <td class="has-text-centered is-vcentered">
                    <input type="checkbox" class="scale2" @bind=prop.IsRequired>
                </td>
                <td>
                    <DataTypeSelector Type=prop.Type @bind-Value=prop.Default />
                </td>
                <td class="has-text-centered">
                    <button class="button is-danger" @onclick=@(() => OnRemove_Click(prop))>
                        <span class="icon is-small">
                            <i class="fas fa-times"></i>
                        </span>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (CanCreate)
{
    <button type="button" class="button is-success" @onclick="OnCreate_Click">
        <span class="icon is-small">
            <i class="fa-solid fa-circle-plus"></i>
        </span>
        <span>Add</span>
    </button>
}

@code {

    [Parameter]
    public required List<DataTypeProperty> Properties { get; set; }

    [Parameter]
    public bool CanCreate { get; set; } = true;

    private async Task OnCreate_Click()
    {
        try
        {
            Properties.Add(new DataTypeProperty
                {
                    Name = "NewProperty",
                    Type = DataTypeEnum.String,
                    IsRequired = false,
                    Default = string.Empty
                });
        }
        catch (Exception err)
        {
            await Notification.AddError(err);
        }
    }

    private async Task OnRemove_Click(DataTypeProperty prop)
    {
        try
        {
            if (Properties.Contains(prop))
            {
                Properties.Remove(prop);
            }
        }
        catch (Exception err)
        {
            await Notification.AddError(err);
        }
    }

    private void OnPropSelect_ValueChanged(DataTypeProperty prop, DataTypeEnum dataTypeEnum)
    {
        prop.Type = dataTypeEnum;
        if (prop.Type == DataTypeEnum.Reference)
        {
            prop.Default = new Business.Datas.Model.ReferenceValues.DataTypeReferenceValue
                {
                    DataTypePath = ""
                };
        }
    }
}
 *@