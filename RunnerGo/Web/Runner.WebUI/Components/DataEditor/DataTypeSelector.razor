@* @using Runner.Business.Datas.Model

@switch (Type)
{
    case DataTypeEnum.String:
        {
            <StringDataType @bind-Value:get=Value @bind-Value:set=SetValue Readonly=@Readonly Label=@Label />
            break;
        }
    case DataTypeEnum.StringList:
        {
            <StringListDataType @bind-Value:get=Value @bind-Value:set=SetValue Readonly=@Readonly Label=@Label />
            break;
        }
    case DataTypeEnum.NodePath:
        {
            <NodePathDataType @bind-Value:get=Value @bind-Value:set=SetValue Readonly=@Readonly Label=@Label />
            break;
        }
    case DataTypeEnum.Reference:
        {
            <ReferenceDataType @bind-Value:get=Value @bind-Value:set=SetValue Readonly=@Readonly Label=@Label />
            break;
        }
}

@code {

    [Parameter]
    public DataTypeEnum Type { get; set; }

    [Parameter]
    public object? Value { get; set; }

    [Parameter]
    public EventCallback<object?> ValueChanged { get; set; }

    [Parameter]
    public bool Readonly { get; set; }

    [Parameter]
    public string? Label { get; set; }

    private Task SetValue(object? value)
    {
        Value = value;
        return ValueChanged.InvokeAsync(Value);
    }
}
 *@