@page "/"
@inherits BasePage
@implements IDisposable
@using Runner.Business.Entities.Identity
@using Runner.WebUI.Security
@inject WebAuthenticationService authenticationService
@inject NodeService nodeService

<div class="container">

    <div class="box mt-4">
        <h3 class="title is-3">Home</h3>
    </div>

    <div class="buttons mt-3">
        <button type="button" class="button is-danger" @onclick="OnLogoff_Click">
            <span class="icon is-small">
                <i class="fa-solid fa-right-from-bracket"></i>
            </span>
            <span>Logoff</span>
        </button>
        <NavLink class="button is-success" href="/apps">
            <span class="icon is-small">
                <NodeTypeIcon Type="NodeType.App" />
            </span>
            <span>Apps</span>
        </NavLink>
    </div>

    <div class="buttons mt-3">
        <NavLink class="button is-success" href="/agentversion">
            <span class="icon is-small">
                <i class="fa-solid fa-boxes-packing"></i>
            </span>
            <span>Agent Versions</span>
        </NavLink>
        <NavLink class="button is-primary" href="/jobs">
            <span class="icon is-small">
                <i class="fa-solid fa-user-doctor"></i>
            </span>
            <span>Jobs</span>
        </NavLink>
    </div>

    <div class="box mt-3">
        <div class="columns">
            @if (userHome is not null)
            @foreach (var favorite in userHome.Favorite)
            {
                <div class="column is-3">
                    <div class="card homecard">
                        <div class="card-content" @onclick=@(() => OnCard_Click(favorite))>
                            <span class="icon">
                                @if (favorite.NodeType is not null)
                                {
                                    <NodeTypeIcon Type=favorite.NodeType.Value />
                                }
                            </span>
                            <div class="media-content">
                                <p class="title is-4">@favorite.Title</p>
                                <p class="subtitle is-6">@favorite.Subtitle</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {

    private UserHome? userHome;

    protected override async Task OnInitializedAsync()
    {
        if (UserHomeService.IdentityProvider.IsLogged)
        {
            userHome = await UserHomeService.ReadOrCreate();
        }
        else
        {
            UserHomeService.IdentityProvider.OnSetUser += IdentityProvider_OnSetUser;
        }
    }

    public void Dispose()
    {
        UserHomeService.IdentityProvider.OnSetUser -= IdentityProvider_OnSetUser;
    }

    private async void IdentityProvider_OnSetUser()
    {
        userHome = await UserHomeService.ReadOrCreate();
        StateHasChanged();
    }

    public async Task OnLogoff_Click()
    {
        await authenticationService.Logoff();
        NavigateTo("/");
    }

    private async Task OnCard_Click(UserHomeFavorite favorite)
    {
        if (!string.IsNullOrEmpty(favorite.DirectPath))
        {
            NavigateTo(favorite.DirectPath);
        }
        else if (favorite.NodeId.HasValue)
        {
            var nodePath = await nodeService
                .BuildPath(favorite.NodeId.Value);
            if (!string.IsNullOrEmpty(nodePath))
            {
                NavigateTo(nodePath);
            }
        }
    }
}
