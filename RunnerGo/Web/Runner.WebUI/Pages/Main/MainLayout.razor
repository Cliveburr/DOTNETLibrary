@using Runner.Business.Security
@using Runner.WebUI.Security
@inject WebAuthenticationService authenticationService
@inject IdentityProvider identityProvider;
@inject NavigationManager navigationManager
@inherits LayoutComponentBase

<Navbar />
@Body
<Runner.WebUI.Components.Modal.ModalComponent />
<Runner.WebUI.Components.Notification.NotificationComponent />

@code {

    private ErrorBoundary? errorBoundary;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await authenticationService.ValidateAccessToken();
        }

        if (identityProvider.IsLogged)
        {
            if (navigationManager.MatchFullPath("register", "login"))
            {
                navigationManager.NavigateTo("/");
            }
        }
        else
        {
            if (!navigationManager.MatchFullPath("register", "login"))
            {
                navigationManager.NavigateTo("/login");
            }
        }
    }
}