@page "/apps"
@using Runner.Application.Commands.Nodes.DTO
@using Runner.Application.Commands.Nodes.Types
@using Runner.Application.Commands.Nodes.Types.DTO
@inject KernelService kernel

<div class="container">

    <div class="box mt-4">
        <h3 class="title is-3">Applications <NodeTypeIcon Type="NodeTypeDTO.App" /></h3>
    </div>

    <div class="buttons mt-3">
        <button type="button" class="button is-primary" @onclick="baseService.BackNode">
            <span class="icon is-small">
                <i class="fa-solid fa-square-caret-left"></i>
            </span>
        </button>
        <button type="button" class="button is-info" @onclick="OnRefresh_Click">
            <span class="icon is-small">
                <i class="fa-solid fa-rotate-right"></i>
            </span>
            <span>Refresh</span>
        </button>
        <button type="button" class="button is-success" @onclick="OnCreate_Click">
            <span class="icon is-small">
                <i class="fa-solid fa-circle-plus"></i>
            </span>
            <span>Create</span>
        </button>
    </div>

    <div class="box mt-3">
        @if (Items != null)
        {
            <DataTable Items="Items">
                <Header>
                    <tr>
                        <th class="w50px">Type</th>
                        <th>Name</th>
                    </tr>
                </Header>
                <Body Context="Item">
                    <tr class="pointer" @onclick="@(_ => OnNavigateApp_Click(Item))">
                        <td class="has-text-centered">
                            <NodeTypeIcon Type="Item.Type" />
                        </td>
                        <td>@Item.Name</td>
                    </tr>
                </Body>
            </DataTable>
        }
    </div>
</div>


@code {

    public List<AppDTO>? Items { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await OnRefresh_Click();
    }

    public async Task OnRefresh_Click()
    {
        Items = await kernel.Exec(new ReadLoggedHandler());
        StateHasChanged();
    }

    public async Task OnCreate_Click()
    {
        var question = await baseService.Modal.Question("Enter the name of the app", "", "app");
        if (question.Ok)
        {
            await appService.Create(question.Value);
            await OnRefresh_Click();
        }
    }

    public void OnNavigateApp_Click(AppList app)
    {
        baseService.Navigation.NavigateTo("/app/" + app.Name);
    }
}
